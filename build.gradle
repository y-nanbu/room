buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
        classpath("org.springframework:springloaded:1.2.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'room'
    version =  '0.0.1'
}

repositories {
    mavenCentral()
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

javadoc {
    options.encoding = "UTF-8"
    options.memberLevel = JavadocMemberLevel.PRIVATE
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-websocket")

    // jackson
    compile("com.fasterxml.jackson.core:jackson-databind:2.3.4")

    // mongeez
//    compile("io.github.hzpz.spring.boot:mongeez-spring-boot-starter:1.0.0")
//    compile("org.mongeez:mongeez:0.9.4")

    testCompile("org.spockframework:spock-spring:1.0-groovy-2.4")
}

bootRun {
    if ( project.hasProperty('args') ) {
        args project.args.split('\\s+')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}