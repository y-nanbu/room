buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
        classpath("org.springframework:springloaded:1.2.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "jacoco"
apply plugin: "sonar-runner"

ext {
    bootstrapVersion = '3.2.0'
    javaVersion      = '1.8'
    jacksonVersion   = '2.3.4'
    encoding         = 'UTF-8'
    lombokVersion    = '1.16.6'
    flywayVersion    = '3.2.1'
}

jar {
    baseName = 'room'
    version =  '0.0.1'
}

repositories {
    mavenCentral()
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
[compileJava, compileTestJava]*.options*.encoding = encoding

javadoc {
    options.encoding = encoding
    options.memberLevel = JavadocMemberLevel.PRIVATE
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.webjars:bootstrap:${bootstrapVersion}")
    compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    compile("org.projectlombok:lombok:${lombokVersion}")

    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("postgresql:postgresql:9.1-901-1.jdbc4")
    compile("org.flywaydb:flyway-core:${flywayVersion}")

    compile("mysql:mysql-connector-java:5.1.36")

    // unit test
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.spockframework:spock-spring:1.0-groovy-2.4")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

bootRun {
    systemProperties = System.properties
    main = 'jp.co.tads.room.App'
}

// `gradle production bootRun`
task production << {
    bootRun.systemProperty 'spring.profiles.active', 'production'
}

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

sonarRunner {
    sonarProperties {
        property "sonar.host.url", "http://localhost:9000/"
        property "sonar.jdbc.url", "jdbc:mysql://localhost:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance"
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.jdbc.username", "sonar"
        property "sonar.jdbc.password", "sonar"
    }
}